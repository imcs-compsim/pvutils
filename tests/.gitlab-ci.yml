#------------------------------------------------------------------------------
# Stages during testing.
#------------------------------------------------------------------------------

stages:
    - check_code
    - testing


#------------------------------------------------------------------------------
# Some variables to contol the testing behaviour.
#------------------------------------------------------------------------------

variables:
    # Clone repository by default.
    GIT_STRATEGY: clone

    # Flag that GitLab testing is active
    GITLAB_TESTING: 1

    # Path to ParaView
    PARAVIEW_PATH: "/imcs/public/compsim/opt/ParaView-5.10.1-osmesa-MPI-Linux-Python3.9-x86_64/"


#------------------------------------------------------------------------------
# Templates for the testing jobs.
#------------------------------------------------------------------------------

.pvpython-testing: &pvpython-testing
    stage: testing
    script:
        - "whoami"
        - "pwd"
        # Add the path to pvutils to the python path.
        - export PYTHONPATH="${PYTHONPATH}:$(pwd)"
        - echo PYTHONPATH=$PYTHONPATH
        # Run tests.
        - "cd tests"
        - "${PARAVIEW_PATH}/bin/pvpython testing_pvutils.py"
    tags:
        - "imcs-all"

.python-testing: &python-testing
    stage: testing
    script:
        - "whoami"
        - "pwd"
        # Setup python environment.
        - ${PYTHON_EXE} -m venv env
        - source env/bin/activate
        - pip install -e .
        # Set paths to find ParaView paths.
        - export PYTHONPATH="${PYTHONPATH}:${APPEND_TO_PYTHONPATH}"
        - export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${APPEND_TO_LD_LIBRARY_PATH}"
        # Run tests.
        - "cd tests"
        - "python3 testing_pvutils.py"
    tags:
        - "imcs-all"

.pvutils-code-check: &pvutils-code-check
    stage: check_code
    script:
        - "whoami"
        - "pwd"
        # Setup virtual environment.
        - "${PYTHON_EXE} -m venv ${PYTHON_VENV}"
        - source "${PYTHON_VENV}/bin/activate"
        - pip install black
        # Run code check.
        - 'black . --check --exclude="${PYTHON_VENV}" && exit 0'
        # If we did not exit earlier, raise an error here
        - "exit 1"
    tags:
        - "imcs-all"

#------------------------------------------------------------------------------
# Actual jobs for testing.
#------------------------------------------------------------------------------

5.10.1-pvpython:
    << : *pvpython-testing

5.10.1-system-python:
    << : *python-testing
    variables:
        PYTHON_EXE: "/hdd/gitlab-runner/lib/spack/opt/spack/linux-ubuntu20.04-broadwell/gcc-9.4.0/python-3.9.15-ul7tj5r5qn3unewqfwxrlu3blvmrec4u/bin/python3"
        APPEND_TO_PYTHONPATH: "${PARAVIEW_PATH}/lib/python3.9/site-packages"
        APPEND_TO_LD_LIBRARY_PATH: "${PARAVIEW_PATH}/lib"

code-check:
    << : *pvutils-code-check
    variables:
        PYTHON_EXE: "/hdd/gitlab-runner/lib/spack/opt/spack/linux-ubuntu20.04-broadwell/gcc-9.4.0/python-3.9.15-ul7tj5r5qn3unewqfwxrlu3blvmrec4u/bin/python3"
        PYTHON_VENV: "env"
